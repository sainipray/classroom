"""
Django settings for classroom project.

Generated by 'django-admin startproject' using Django 4.2.14.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure--gc=_n$jm-cdnqp=nl%55ip@4yr0(w^8yby4c8694$z-sg55^x"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "storages",
    "constance",
    "constance.backends.database",
    "django_extensions",
    "rest_framework",
    "rest_framework_simplejwt",
    "drf_yasg",
    "corsheaders",
    "django_filters",
]

PROJECT_APPS = [
    "apps.user.apps.UserConfig",
    "apps.batch.apps.BatchConfig",
    "apps.course.apps.CourseConfig",
    "apps.lead.apps.LeadConfig",
    "apps.coupon.apps.CouponConfig",
    "apps.payment.apps.PaymentConfig",
    # "apps.course.apps.CourseConfig",
    # "apps.filemanager.apps.FilemanagerConfig",
]

INSTALLED_APPS += PROJECT_APPS

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "classroom.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "classroom.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": 'class1',
        "USER": 'neerajkumar',
        "PASSWORD": 'A9b8c7d6@@',
        "HOST": 'localhost',
        "PORT": '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

# Custom User Model
AUTH_USER_MODEL = "user.CustomUser"
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

CONSTANCE_BACKEND = "constance.backends.database.DatabaseBackend"

CONSTANCE_CONFIG = {
    "DEFAULT_STORAGE_BACKEND": ("local", "Default storage backend (local, s3)"),
    "AWS_ACCESS_KEY_ID": ("", "AWS Access Key ID"),
    "AWS_SECRET_ACCESS_KEY": ("", "AWS Secret Access Key"),
    "AWS_STORAGE_BUCKET_NAME": ("", "AWS Storage Bucket Name"),
    "AWS_S3_REGION_NAME": ("us-east-1", "AWS S3 Region Name"),
    #
    "GROUP_STUDY": (True, "Enable Group Study"),
    "PARENT_LOGIN": (True, "Enable Parent Login"),
    "CONFIGURE_GRADING": (True, "Configure Grading"),
    # Security Settings
    "ANTI_PIRACY_WATERMARK_VIDEOS": (False, "Enable watermark on store videos"),
    "ANTI_PIRACY_WATERMARK_LIVE": (False, "Enable watermark on live class videos"),
    "ANTI_PIRACY_WATERMARK_IMAGE": (False, "Enable image watermark"),
    "ANTI_PIRACY_WATERMARK_IMAGE_UPLOAD": ("", "Upload custom watermark image"),
    "SAFETY_NET_CHECK": (False, "Enable safety net check"),
    "DEVICE_RESTRICTION": ("no_restriction", "Device restriction policy"),
    # Live Class Settings
    "ALLOW_ON_DESKTOP": (True, "Allow live classes on desktop"),
    "SHOW_RECORDED_CLASS_ON_WEB": (True, "Show recorded class on web"),
    "ATTENDANCE_CRITERIA": (75, "Attendance criteria in %"),
    # Payment Gateway Settings
    "RAZORPAY_API_BASE_URL": ("", "Razorpay API Base URL"),
    "RAZORPAY_API_KEY": ("", "Razorpay API Key"),
    "RAZORPAY_API_SECRET": ("", "Razorpay API Secret"),
    # SMS Gateway (DLT) Settings
    "SMS_GATEWAY_API_BASE_URL": ("", "SMS Gateway API Base URL"),
    "SMS_GATEWAY_API_KEY": ("", "SMS Gateway API Key"),
    "SMS_GATEWAY_ROUTE": ("", "SMS Gateway Route"),
    "SMS_GATEWAY_SENDER_ID": ("", "SMS Gateway Sender ID"),
    "SMS_GATEWAY_TEMPLATES": ("", "SMS Gateway Templates"),
    # SMTP Email Settings
    "SMTP_MAIL_HOST": ("", "SMTP Mail Host"),
    "SMTP_MAIL_PORT": (587, "SMTP Mail Port"),
    "SMTP_MAIL_USERNAME": ("", "SMTP Mail Username"),
    "SMTP_MAIL_PASSWORD": ("", "SMTP Mail Password"),
    "SMTP_MAIL_FROM_ADDRESS": ("", "SMTP Mail From Address"),
    "SMTP_MAIL_FROM_NAME": ("", "SMTP Mail From Name"),
    "SMTP_MAIL_BCC_LIST": ("", "SMTP Mail BCC List"),
    # MeritHub API Settings
    "MERITHUB_API_BASE_URL": ("", "MeritHub API Base URL"),
    "MERITHUB_CLIENT_ID": ("", "MeritHub Client ID"),
    "MERITHUB_CLIENT_SECRET": ("", "MeritHub Client Secret"),
    # Firebase Settings
    "FIREBASE_API_KEY": ("", "Firebase API Key"),
    "FIREBASE_AUTH_DOMAIN": ("", "Firebase Auth Domain"),
    "FIREBASE_PROJECT_ID": ("", "Firebase Project ID"),
    "FIREBASE_STORAGE_BUCKET": ("", "Firebase Storage Bucket"),
    "FIREBASE_MESSAGING_SENDER_ID": ("", "Firebase Messaging Sender ID"),
    "FIREBASE_APP_ID": ("", "Firebase App ID"),
    # Tax Setup
    "TAX_SETUP": ("", "Tax Setup"),
    # SMS & Email Schedulers
    "SMS_EMAIL_SCHEDULERS": ("", "SMS & Email Schedulers"),
    # Live Chat Settings
    "LIVE_CHAT_CREATE_GROUP": (True, "Allow students to create groups and chat"),
    "LIVE_CHAT_DOCUMENT_SHARE": (True, "Allow document sharing"),
    "LIVE_CHAT_IMAGE_SHARE": (True, "Allow image sharing"),
    "LIVE_CHAT_AUDIO_SHARE": (True, "Allow audio file sharing"),
}
DEFAULT_FILE_STORAGE = "config.custom_storages.get_storage_class"

# Django Rest Framework
REST_FRAMEWORK = {
    "DATETIME_FORMAT": "%Y-%m-%dT%H:%M:%S%z",
    "DEFAULT_RENDERER_CLASSES": (
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
    ),
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
    "EXCEPTION_HANDLER": "config.handler.custom_exception_handler",
}

LOGIN_URL = "rest_framework:login"
LOGOUT_URL = "rest_framework:logout"

# SWAGGER_SETTINGS = {"JSON_EDITOR": True, "SHOW_REQUEST_HEADERS": True}

SIMPLE_JWT = {
    "USER_ID_FIELD": "id",
    "ACCESS_TOKEN_LIFETIME": timedelta(days=20),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=365),
}
BROKER_URL = "redis://localhost:6379"
CELERY_RESULT_BACKEND = "redis://localhost:6379"
CELERY_ACCEPT_CONTENT = ["application/json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"

SPECTACULAR_SETTINGS = {
    "TITLE": "Welcare API",
    "DESCRIPTION": "Doctor Appointment API",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
    "SWAGGER_UI_DIST": "SIDECAR",  # shorthand to use the sidecar instead
    "SWAGGER_UI_FAVICON_HREF": "SIDECAR",
    "REDOC_DIST": "SIDECAR",
    # 'SERVE_PERMISSIONS': ['rest_framework.permissions.IsAuthenticated'],
}

PUSH_NOTIFICATIONS_SETTINGS = {
    "FCM_API_KEY": "",
}

PHONENUMBER_DEFAULT_REGION = 'IN'
# Ensure that phone number format adheres to the default region
PHONENUMBER_DB_FORMAT = 'E164'  # Stores the number in international format in the database
PHONENUMBER_DEFAULT_FORMAT = 'NATIONAL'  # Formats the number for display in national format

CORS_ORIGIN_ALLOW_ALL = True
SWAGGER_SETTINGS = {
    'USE_SESSION_AUTH': False,
    'SECURITY_DEFINITIONS': {
        'Token': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    # 'DEFAULT_AUTO_SCHEMA_CLASS': 'drf_yasg.openapi.AutoSchema',
}
