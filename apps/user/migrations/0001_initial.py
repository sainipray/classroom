# Generated by Django 5.0.7 on 2024-10-11 11:52

import django.db.models.deletion
import django_extensions.db.fields
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='IN', unique=True, verbose_name='Phone Number')),
                ('full_name', models.CharField(max_length=100, verbose_name='Full Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('role', models.CharField(choices=[('STUDENT', 'Student'), ('TEACHER', 'Teacher'), ('ADMIN', 'Admin'), ('INSTRUCTOR', 'Instructor')], default='STUDENT', max_length=50, verbose_name='Role')),
                ('merit_user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instructor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('about', models.TextField(blank=True, verbose_name='About')),
                ('profile_photo', models.ImageField(blank=True, upload_to='profile_photos/', verbose_name='Profile Photo')),
                ('mother_name', models.CharField(blank=True, max_length=100, verbose_name="Mother's Name")),
                ('father_name', models.CharField(blank=True, max_length=100, verbose_name="Father's Name")),
                ('occupation', models.CharField(blank=True, max_length=100, verbose_name='Occupation')),
                ('parent_mobile_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='IN', verbose_name='Parent Mobile Number')),
                ('parent_email', models.EmailField(blank=True, max_length=254, verbose_name='Parent Email')),
                ('parent_profile_photo', models.ImageField(blank=True, upload_to='parent_photos/', verbose_name='Parent Profile Photo')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, max_length=10, verbose_name='Gender')),
                ('nationality', models.CharField(blank=True, max_length=50, verbose_name='Nationality')),
                ('blood_group', models.CharField(blank=True, max_length=3, verbose_name='Blood Group')),
                ('permanent_address', models.TextField(blank=True, verbose_name='Permanent Address')),
                ('permanent_address_pincode', models.CharField(blank=True, max_length=10, verbose_name='Permanent Address Pincode')),
                ('correspondence_address', models.TextField(blank=True, verbose_name='Correspondence Address')),
                ('correspondence_address_pincode', models.CharField(blank=True, max_length=10, verbose_name='Correspondence Address Pincode')),
                ('school_name', models.CharField(blank=True, max_length=100, verbose_name='School Name')),
                ('college_name', models.CharField(blank=True, max_length=100, verbose_name='College Name')),
                ('marks_x', models.FloatField(blank=True, null=True, verbose_name='Marks in X (%)')),
                ('x_result', models.FileField(blank=True, upload_to='results/x/', verbose_name='X Result')),
                ('marks_xii', models.FloatField(blank=True, null=True, verbose_name='Marks in XII (%)')),
                ('xii_result', models.FileField(blank=True, upload_to='results/xii/', verbose_name='XII Result')),
                ('marks_college', models.FloatField(blank=True, null=True, verbose_name='Marks in College (%)')),
                ('college_result', models.FileField(blank=True, upload_to='results/college/', verbose_name='College Result')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(choices=[('mobile', 'Mobile'), ('desktop', 'Desktop')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Device Session',
                'verbose_name_plural': 'Device Sessions',
                'unique_together': {('user', 'device_type')},
            },
        ),
    ]
